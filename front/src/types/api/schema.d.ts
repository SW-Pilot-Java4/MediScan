/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/reissue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["reissue"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/join": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["joinProcess"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/temp/batch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["runBatch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/temp/test/ok": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ok"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/temp/test/no_content": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["noContent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/temp/test/created_v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["created_v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/temp/test/created": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["created"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/hospital": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 전체 병원 조회
         * @description 전체 병원 리스트를 조회합니다.
         */
        get: operations["getAllHospital"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/hospital/{hospitalCode}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 병원 상세 조회
         * @description 병원 코드에 따라 상세 정보를 조회합니다.
         */
        get: operations["getHospitalDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["adminP"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["mainP"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        JoinDTO: {
            username?: string;
            password?: string;
            email?: string;
            address?: string;
            phone?: string;
        };
        ApiResponseString: {
            /** Format: int32 */
            statusCode?: number;
            message: string;
            /** @enum {string} */
            resultType: "SUCCESS" | "VALIDATION_EXCEPTION" | "CUSTOM_EXCEPTION";
            errorCode?: string;
            data: string;
        };
        ApiResponseEmpty: {
            /** Format: int32 */
            statusCode?: number;
            message: string;
            /** @enum {string} */
            resultType: "SUCCESS" | "VALIDATION_EXCEPTION" | "CUSTOM_EXCEPTION";
            errorCode?: string;
            data: components["schemas"]["Empty"];
        };
        Empty: Record<string, never>;
        ApiResponseURI: {
            /** Format: int32 */
            statusCode?: number;
            message: string;
            /** @enum {string} */
            resultType: "SUCCESS" | "VALIDATION_EXCEPTION" | "CUSTOM_EXCEPTION";
            errorCode?: string;
            /** Format: uri */
            data: string;
        };
        ApiResponseListHospitalListResponse: {
            /** Format: int32 */
            statusCode?: number;
            message: string;
            /** @enum {string} */
            resultType: "SUCCESS" | "VALIDATION_EXCEPTION" | "CUSTOM_EXCEPTION";
            errorCode?: string;
            data: components["schemas"]["HospitalListResponse"][];
        };
        HospitalListResponse: {
            hospital_code?: string;
            name?: string;
            address?: string;
        };
        ApiResponseHospitalInfoResponse: {
            /** Format: int32 */
            statusCode?: number;
            message: string;
            /** @enum {string} */
            resultType: "SUCCESS" | "VALIDATION_EXCEPTION" | "CUSTOM_EXCEPTION";
            errorCode?: string;
            data: components["schemas"]["HospitalInfoResponse"];
        };
        BaseInfo: {
            hospitalCode?: string;
            name?: string;
            address?: string;
            callNumber?: string;
            latitude?: string;
            longitude?: string;
        };
        DetailInfo: {
            departmentCodes?: string[];
            closedSunday?: string;
            closedHoliday?: string;
            emergencyDayYn?: string;
            emergencyDayPhone1?: string;
            emergencyDayPhone2?: string;
            emergencyNightYn?: string;
            emergencyNightPhone1?: string;
            emergencyNightPhone2?: string;
            lunchWeekday?: string;
            lunchSaturday?: string;
            receptionWeekday?: string;
            receptionSaturday?: string;
            treatSunStart?: string;
            treatSunEnd?: string;
            treatMonStart?: string;
            treatMonEnd?: string;
            treatTueStart?: string;
            treatTueEnd?: string;
            treatWedStart?: string;
            treatWedEnd?: string;
            treatThuStart?: string;
            treatThuEnd?: string;
            treatFriStart?: string;
            treatFriEnd?: string;
            treatSatStart?: string;
            treatSatEnd?: string;
        };
        GradeInfo: {
            grades?: {
                [key: string]: number;
            };
        };
        HospitalInfoResponse: {
            baseInfo?: components["schemas"]["BaseInfo"];
            detailInfo?: components["schemas"]["DetailInfo"];
            gradeInfo?: components["schemas"]["GradeInfo"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    reissue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": Record<string, never>;
                };
            };
        };
    };
    joinProcess: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["JoinDTO"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    runBatch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    ok: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseString"];
                };
            };
        };
    };
    noContent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseEmpty"];
                };
            };
        };
    };
    created_v2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseURI"];
                };
            };
        };
    };
    created: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseEmpty"];
                };
            };
        };
    };
    getAllHospital: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseListHospitalListResponse"];
                };
            };
        };
    };
    getHospitalDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                hospitalCode: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseHospitalInfoResponse"];
                };
            };
        };
    };
    adminP: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
    mainP: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": string;
                };
            };
        };
    };
}
